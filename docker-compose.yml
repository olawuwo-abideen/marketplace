version: '3.8'

services:
  admin:
    build:
      context: .
      dockerfile: ./apps/admin/Dockerfile
      target: development
    command: npm run start:dev admin
    env_file:
      - ./apps/admin/.env
    depends_on:
      - mongodb-primary
      - mongodb-secondary
      - mongodb-arbiter
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - app_node_modules_admin:/usr/src/app/node_modules
    ports:
      - '3002:3002'

  order:
    build:
      context: .
      dockerfile: ./apps/order/Dockerfile
      target: development
    command: npm run start:dev order
    env_file:
      - ./apps/order/.env
    depends_on:
      - mongodb-primary
      - mongodb-secondary
      - mongodb-arbiter
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - app_node_modules_order:/usr/src/app/node_modules
    ports:
      - '3003:3003'

  user:
    build:
      context: .
      dockerfile: ./apps/user/Dockerfile
      target: development
    command: npm run start:dev user
    env_file:
      - ./apps/user/.env
    depends_on:
      - mongodb-primary
      - mongodb-secondary
      - mongodb-arbiter
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - app_node_modules_user:/usr/src/app/node_modules
    ports:
      - '3004:3004'

  product:
    build:
      context: .
      dockerfile: ./apps/product/Dockerfile
      target: development
    command: npm run start:dev product
    env_file:
      - ./apps/product/.env
    depends_on:
      - mongodb-primary
      - mongodb-secondary
      - mongodb-arbiter
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - app_node_modules_product:/usr/src/app/node_modules
    ports:
      - '3005:3005'

  review:
    build:
      context: .
      dockerfile: ./apps/review/Dockerfile
      target: development
    command: npm run start:dev review
    env_file:
      - ./apps/review/.env
    depends_on:
      - mongodb-primary
      - mongodb-secondary
      - mongodb-arbiter
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - app_node_modules_review:/usr/src/app/node_modules
    ports:
      - '3006:3006'

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - ./apps/auth/.env
    depends_on:
      - mongodb-primary
      - mongodb-secondary
      - mongodb-arbiter
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - app_node_modules_auth:/usr/src/app/node_modules
    ports:
      - '3001:3001'

  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'

  mongodb-primary:
    image: docker.io/bitnami/mongodb:5.0
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
    volumes:
      - mongodb_master_data:/bitnami/mongodb
    ports:
      - '27017:27017'

  mongodb-secondary:
    image: docker.io/bitnami/mongodb:5.0
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123

  mongodb-arbiter:
    image: docker.io/bitnami/mongodb:5.0
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
      - MONGODB_REPLICA_SET_MODE=arbiter
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123

volumes:
  mongodb_master_data:
    driver: local
  app_node_modules_admin:
  app_node_modules_order:
  app_node_modules_user:
  app_node_modules_product:
  app_node_modules_review:
  app_node_modules_auth:
